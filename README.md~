idservice
=========
A Django application for the creation of unique identifiers for library collections and items.
This was created as a replacement of the NOID software, though it is slightly different in scope.
This application can mint new identifiers, bind urls and descriptions to them, and supports a lookup call as well. However, based on our local specs, a URL resolving function was not built in.


Installation Instructions
-------------------------



1) Install virtualenv

sudo apt-get install python-setuptools

sudo easy_install virtualenv

2) create directory for project and clone it

mkdir /home/<user>/Projects/
cd /home/<user>/Projects/
git clone git@github.com:gwu-libraries/idservice.git

3) create environment for the project

cd /home/<user>/Projects/idservice
virtualenv ENV

4) activate it

source ENV/bin/activate

4) install django

pip install django

5) install MySQL

sudo apt-get install mysql-server

6) build dependencies for python  MySQLdb libraries

sudo apt-get build-dep python-mysqldb

7) install MySQLdb python libraries

pip install mysql-python

8) log in to MySQL and create the django db

mysql -u root -p

CREATE DATABASE idservice;
CREATE USER 'django' IDENTIFIED BY '<djangopassword>';
GRANT ALL ON idservice.* TO django;
FLUSH PRIVILIGES;
exit

9) Install arkpy

pip install git+https://github.com/gwu-libraries/arkpy

10) Direct wsgi file to your local site packages

vim /home/<user/Projects/idservice/lids/lids/wsgi.py

Change parameter for site.addsitedir() to your local path.
Your will need to change the user name and possibly the Python version number

11) Install mod_wsgi if necessary, and add apache config file to sites-enabled (This part may be different depending on which OS and version of Apache you are using).

sudo apt-get install libapache2-mod-wsgi

sudo mv /home/<user>/Projects/idservice/apache/id /etc/apache2/sites-enabled/id

sudo vim /etc/apache2/sites-enabled/id

Change the values of the server, user, and python version in the document

sudo a2ensite id

sudo /etc/init.d/apache2 restart

12) set up the database from Django (be sure your virtualenv is still activated)

cd lids/lids
cp settings.py local_settings.py
vim local_settings.py

(change database login and password)

cd ..
python manage.py syncdb


13) Create primary minters and requesters in the DB

python manage.py dbshell

INSERT INTO lidapp_minter SET name='<name>', authority_number='<your NMA#>', prefix='<optional prefix>', template='<your template>', minter_type='<types of IDs to mint>', date_created=NOW(), description='<optional>';

INSERT INTO lidapp_requester SET name='<name>', organization='<your org>', date_created=NOW(), description='<optional>';


